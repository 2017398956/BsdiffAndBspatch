apply plugin: 'com.android.application'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"
    defaultConfig {
        applicationId "com.nfl.bsdiffandbspatch"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        externalNativeBuild {
            cmake {
                cppFlags ""
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    androidTestImplementation('androidx.test.espresso:espresso-core:3.4.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'androidx.appcompat:appcompat:1.3.0'
    androidTestImplementation 'junit:junit:4.13.2'
}

task personalTest(){
    logger.log(LogLevel.ERROR , "task: personalTest exc")
}

project.tasks.all{task->
//    logger.log(LogLevel.ERROR , "task:" + task.name)
    if (task.name == "assembleDebug"){
//        task.doFirst{
//            logger.log(LogLevel.ERROR , "do before assembleDebug")
//        }
//        task.doLast{
//            logger.log(LogLevel.ERROR , "do after assembleDebug")
//        }
    }
}

logger.log(LogLevel.ERROR , "buid.gradle")

tasks.whenTaskAdded {task->
    logger.log(LogLevel.ERROR , "task:" + task.name)
    if (task.name == "assembleDebug"){
        personalTest.dependsOn(task)
//        task.doFirst{
//            logger.log(LogLevel.ERROR , "do before assembleDebug")
//        }
//        task.doLast{
//            logger.log(LogLevel.ERROR , "do after assembleDebug")
//        }
    }
}
